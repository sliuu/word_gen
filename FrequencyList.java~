import structure5.*;
import java.util.Random;
import java.util.Scanner;

public class FrequencyList {
    protected Vector<Association<String, Integer>> tableTwo;
    protected int prob;
    protected Random r;
    
    public FrequencyList(String phrase, String text) {

	r = new Random();
	Scanner in = new Scanner(System.in);
	
	prob = 0;

	tableTwo = new Vector<Association<String, Integer>>();


	String theChar; // The character we will be adding to the Vector
	int start = 0; // Changing the place where we start looking for the key every time we find a key
	int startTwo;
	int charIndex; // Find the index of the Association we're looking for (if it already exists)\
	String newKey; // The four-letter string we will be looking for in case there are multiple occurences
	int multProbs; // Probabilities for a multiple occurence four-letter string

	//System.out.println(text.indexOf(phrase, start));
	
	while (text.indexOf(phrase, start) >= 0) {

	    prob++; // Count the number of times you find the phrase in the text
	    
	    theChar = text.substring(text.indexOf(phrase, start) + 3, text.indexOf(phrase, start) + 4); // Get the character preceding the phrase

	    charIndex = tableTwo.indexOf(new Association(theChar)); // Look to see if the character already has an Association

	    newKey = phrase + theChar; // Create the newKey so we can search for this four-letter string
					 
	    if (charIndex < 0) { // If the character doesn't already have an association, do this:
		
		tableTwo.add(new Association(theChar, prob)); // Add the character to the vector for the first time

		startTwo = 0; // Start looking at position 0

		multProbs = 0; // Start the count at 0

		while (text.indexOf(newKey, startTwo) > 0) { 

		    multProbs++;
		    startTwo = text.indexOf(newKey, startTwo) + 1;

		}
		
		tableTwo.get(tableTwo.indexOf(new Association(theChar))).setValue(multProbs);
	    }
	    
	    //System.out.println(theChar);

	    start = text.indexOf(phrase, start) + 1; 

	}
	
    }

    public String randNext(){
	
	int num;
	num = r.nextInt(prob); // Pick a random number less than the number of times each 4-letter combination (newKey) appeared in the phrase
	String theChar = "s";
	//	System.out.println(tableTwo.size());
	//	System.out.println(prob);
	//	System.out.println(tableTwo.get(0).getValue());
	//	System.out.println(tableTwo.get(1).getValue());
	//	System.out.println(tableTwo.get(2).getValue());
	for (int i = 0; i < tableTwo.size(); i++) {
	    if (tableTwo.get(i).getValue() >= num) {
		theChar = tableTwo.get(i).getKey();
		//break;
		return theChar;
	    }
	    
	}

	return theChar;
    }

    public static void main(String[] args) {
	
	FrequencyList theList = new FrequencyList("the", "the theatre is their thing");
	System.out.println(theList.randNext());

	
    }

    



}
